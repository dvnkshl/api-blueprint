FORMAT: 1A
HOST: https://stage.api.trychec.com/marketplace

# Chec Marketplace API (Beta) 
Chec's marketplace API allows you to integrate ecommerce into your application/platform without having to build out your own ecommerce solution. 
You can create merchants, add products, allow customers to checkout, and pull order & transaction data from chec.

# Group Merchants
The API allows you to add, delete, and update your merchants. You can retrieve individual merchants as well as a list of all your merchants.

## Merchants [/merchants]

### List merchants [GET]
List all merchants on your marketplace.

+ Response 200 (application/json)

        [{
            "merchant_id": "MER_jFHenG23Rg",
            "currency": "USD",
            "sellers_name": "CJ Tate",
            "sellers_email": "cjtate@gmail.com",
            "street_address": "1001 Balling St",
            "town_city": "Racks on Racks",
            "county_state": "RacksOnRackshire",
            "postal_zip_code": "94107",
            "country": "US",
            "locked": null,
            "locked_reason": null,
            "meta": {},
        },
        {
            "merchant_id": "MER_jFHGe663Rg",
            "currency": "GBP",
            "sellers_name": "Devan",
            "sellers_email": "devan@madebyswipe.com",
            "street_address": "68 Kingsway",
            "town_city": "Northampton",
            "county_state": "Northamptonshire",
            "postal_zip_code": "NN28HF",
            "country": "GB",
            "locked": null,
            "locked_reason": null,
            "meta": {},
        }, {...}, {...}]
        
### Create a new merchant [POST]
Add a new merchant to your marketplace
+ Request (application/json)

         {
            "currency": "USD",
            "sellers_name": "CJ Tate",
            "sellers_email": "cjtate@gmail.com",
            "street_address": "1001 Balling St",
            "town_city": "Racks on Racks",
            "county_state": "RacksOnRackshire",
            "postal_zip_code": "94107",
            "country": "US",
            "meta": {
                    "communly_id": 123,
                    "other_meta_data": 321
                        },
         }

+ Response 201 (application/json)

        {
            "merchant_id": "MER_jFHenG23Rg",
            "currency": "USD",
            "sellers_name": "CJ Tate",
            "sellers_email": "cjtate@gmail.com",
            "street_address": "1001 Balling St",
            "town_city": "Racks on Racks",
            "county_state": "RacksOnRackshire",
            "postal_zip_code": "94107",
            "country": "US",
            "locked": null,
            "locked_reason": null,
            "meta": {
                    "communly_id": 123,
                    "other_meta_data": 321
                        },
            "created" : 1361481930,
            "last_updated" 1361481930,
        }

## Merchant Resources [/merchants/{merchant_id}]  

### Retrieve a merchant [GET]
Retrieve a merchants details

+ Response 200 (application/json)

        {
            "currency": "USD",
            "sellers_name": "CJ Tate",
            "sellers_email": "cjtate@gmail.com",
            "street_address": "1001 Balling St",
            "town_city": "Racks on Racks",
            "county_state": "RacksOnRackshire",
            "postal_zip_code": "94107",
            "country": "US",
            "locked": null,
            "locked_reason": null,
            "meta": {
                    "communly_id": 123,
                    "other_meta_data": 321
                        },
            "created" : 1361481930,
            "last_updated" 1361481930,
        }
        
        
### Update a merchant [PUT]
Update a merchants details

+ Request (application/json)

        {
            "currency": "USD",
            "sellers_name": "CJ Tate",
            "sellers_email": "cjtate@gmail.com",
            "street_address": "1001 Balling St",
            "town_city": "Racks on Racks",
            "county_state": "RacksOnRackshire",
            "postal_zip_code": "94107",
            "country": "US",
            "meta": {
                    "communly_id": 123,
                    "other_meta_data": 321
                        },
         }
         

+ Response 200 (application/json)

        { 
                "merchant_id": "MER_jFHenG23Rg",
                "currency": "USD",
                "sellers_name": "CJ Tate",
                "sellers_email": "cjtate@gmail.com",
                "street_address": "1001 Balling St",
                "town_city": "Racks on Racks",
                "county_state": "RacksOnRackshire",
                "postal_zip_code": "94107",
                "country": "US",
                "locked": null,
                "locked_reason": null,
                "meta": {
                        "communly_id": 123,
                        "other_meta_data": 321
                            },
                "created" : 1361481930,
                "last_updated" 1361481930,
            }
        
### Remove a merchant [DELETE]

+ Response 204 

# Group Products
The API allows you to list, add, delete, and update your merchants products.

## Products [/products/{merchant_id}]

### List products [GET] 
List products for an individual merchant, returns only essential data.

+ Response 201 (application/json)

        [{
              "product_id": "PRO_jFHenG23Rg",
              "key": "d9pTst",
              "active": "1",
              "name": "123",
              "desc": null,
              "price": "32100",
              "formatted_price": "$321",
              "formatted_price_with_currency_code": "$310 USD",
              "limited_quantity": true,
              "quantity": 10,
              "image": "images.communly.com/product_image.png",
              "pay_what_you_want": null,
              "sales_count": "0",
              "sales_usd_cents": "0",
              "created" : 1361481930,
              "last_updated" : 1361481930,
              "meta" : {},
            }, {...}, {...}]

### Create a product [POST]
Create a product 

+ Request (application/json)

        {
          "name": "Dummy Product Name",
          "description": "This is my test description",
          "price": "32156",
          "limited_quantity": true,
          "quantity": 10,
          "image": "cdn.communly.com/product_image.png",
          "collect_shipping_address": false,
          "extra_fields": [
            {
              "name": "Contact Name",
              "required": true
            },
            {
              "name": "Contact Number",
              "required": false
            }
          ],
          "pay_what_you_want": false,
          "digital_delivery": {
            "enabled": true,
            "access_window": {
              "expires": true,
              "duration": 1,
              "duration_period": "weeks",
              "how_many_times": 10
            },
            "files_links": [
              {
                "type": "url",
                "link": "http://cjtate.com/access",
                "info": "Access your exclusive content"
              },
              {
                "description": "download",
                "link": "http://cdn.communly.com/cj_tate.mp3",
                "info": "MP3 Audio File"
              },
              {
                "description": "download",
                "link": "http://cdn.communly.com/cj_tate.mp4",
                "info": "MP4 Video"
              }
            ]
          },
          "meta": []
        }

+ Response 201 (application/json)

        {
          "created": true,
          "product": {
            "id": "prod_23Rtidc2TeYz12",
            "key": "If333I",
            "active": "1",
            "name": "Dummy Product Name",
            "description": "This is my test description",
            "quantity": "10",
            "price": "32156",
            "images": [
              "cdn.communly.com/product_image.png"
            ],
            "extra_fields": [
              {
                "name": "Contact Name",
                "required": "1"
              },
              {
                "name": "Contact Number",
                "required": "0"
              }
            ],
            "created": "1404381880",
            "last_updated": "1404381880",
            "meta": null,
            "pay_what_you_want": "0",
            "limited_quantity": "1",
            "collect_shipping_address": null,
            "digital_delivery": {
              "enabled": "1",
              "access_window": {
                "expires": "1",
                "duration": "1",
                "duration_period": "weeks",
                "how_many_times": "10"
              },
              "files_links": [
                {
                  "type": "url",
                  "link": "http://cjtate.com/access",
                  "info": "Access your exclusive content"
                },
                {
                  "description": "download",
                  "link": "http://cdn.communly.com/cj_tate.mp3",
                  "info": "MP3 Audio File"
                },
                {
                  "description": "download",
                  "link": "http://cdn.communly.com/cj_tate.mp4",
                  "info": "MP4 Video"
                }
              ]
            }
          }
        }


## Product Resources [/products/{merchant_id}/{product_id}]

### Retrieve a product [GET]
Retrieve a merchant's product

+ Response 201 (application/json)

        {
            "id": "prod_23Rtidc2TeYz12",
            "key": "If333I",
            "active": "1",
            "name": "Dummy Product Name",
            "description": "This is my test description",
            "quantity": "10",
            "price": "32156",
            "images": [
              "cdn.communly.com/product_image.png"
            ],
            "extra_fields": [
              {
                "name": "Contact Name",
                "required": "1"
              },
              {
                "name": "Contact Number",
                "required": "0"
              }
            ],
            "created": "1404381880",
            "last_updated": "1404381880",
            "meta": null,
            "pay_what_you_want": "0",
            "limited_quantity": "1",
            "collect_shipping_address": null,
            "digital_delivery": {
              "enabled": "1",
              "access_window": {
                "expires": "1",
                "duration": "1",
                "duration_period": "weeks",
                "how_many_times": "10"
              },
              "files_links": [
                {
                  "type": "url",
                  "link": "http://cjtate.com/access",
                  "info": "Access your exclusive content"
                },
                {
                  "description": "download",
                  "link": "http://cdn.communly.com/cj_tate.mp3",
                  "info": "MP3 Audio File"
                },
                {
                  "description": "download",
                  "link": "http://cdn.communly.com/cj_tate.mp4",
                  "info": "MP4 Video"
                }
              ]
            }
          }
        

### Update a product [PUT]
Update a merchant's product

+ Request (application/json)

        {
          "merchant_id": "mer_51sQ1GuaJKWl13",
          "name": "New Dummy Product Name",
          "description": "This is new my test description",
          "price": "32156",
          "limited_quantity": true,
          "quantity": 10,
          "collect_shipping_address": false
        }

+ Response 201 (application/json)

         {
          "updated": true,
          "product": {
            "id": "prod_23Rtidc2TeYz12",
            "key": "If333I",
            "active": "1",
            "name": "New Dummy Product Name",
            "description": "This is new my test description",
            "quantity": "10",
            "price": "32156",
            "images": [
              "cdn.communly.com/product_image.png"
            ],
            "extra_fields": [
              {
                "name": "Contact Name",
                "required": "1"
              },
              {
                "name": "Contact Number",
                "required": "0"
              }
            ],
            "created": "1404381880",
            "last_updated": "1404381880",
            "meta": null,
            "pay_what_you_want": "0",
            "limited_quantity": "1",
            "collect_shipping_address": null,
            "digital_delivery": {
              "enabled": "1",
              "access_window": {
                "expires": "1",
                "duration": "1",
                "duration_period": "weeks",
                "how_many_times": "10"
              },
              "files_links": [
                {
                  "type": "url",
                  "link": "http://cjtate.com/access",
                  "info": "Access your exclusive content"
                },
                {
                  "description": "download",
                  "link": "http://cdn.communly.com/cj_tate.mp3",
                  "info": "MP3 Audio File"
                },
                {
                  "description": "download",
                  "link": "http://cdn.communly.com/cj_tate.mp4",
                  "info": "MP4 Video"
                }
              ]
            }
          }
        }

### Remove a product [DELETE]
Remove a product. **Warning** This will permantly delete a product, but will **not* remove orders for this product

+ Response 204

# Group Checkout
This API allows you to generate a checkout token and then capture an order using this token.

## Create a checkout token [/checkout/{merchant_id}/{product_id}]

### Generate a checkout token [GET]
Generate a checkout token which loads relevent product data needed to create your checkout. 

I.E do you need to collect a shipping address, shipping options, extra fields and variants required etc... as well as information about the seller to display to customers. 

+ Response 201 (application/json)

           {
              "checkout_token": "chkt_1XGdbRAWQLY",
              "expires": 1404478268,
              "product": {
                "id": "prod_23TZDoJyxkQ616",
                "name": "Dummy Product Name",
                "description": "This is my test description",
                "quantity": "10",
                "price": "32156",
                "images": [
                  "cdn.communly.com/product_image.png"
                ],
                "formatted_price": "$321.56",
                "formatted_price_with_currency_code": "$321.56 USD"
              },
              "merchant": {
                "id": "mer_51sQ1GuaJKWl13",
                "seller_name": "CJ Tate",
                "seller_email": "cjtate@gmail.com",
                "currency": "USD",
                "street_address": "1001 Balling St",
                "town_city": "Racks on Racks",
                "county_state": "RacksOnRackshire",
                "postal_zip_code": "94107",
                "country": "US"
              },
              "conditionals": {
                "pay_what_you_want": "0",
                "shipping_options_available": null,
                "digital_goods": "1",
                "collect_shipping_address": null,
                "limited_quantity": "1"
              },
              "extra_fields": [
                {
                  "name": "Contact Name",
                  "required": "1"
                },
                {
                  "name": "Contact Number",
                  "required": "0"
                }
              ],
              "product.meta": {
                "communly_id": "123",
                "other_meta_data": "321"
              },
              "merchant.meta": {
                "communly_id": "123",
                "other_meta_data": "321"
              }
            }
            
## Capture an order from a checkout token [/checkout/{checkout_token}]

### Create order from checkout token [POST]
Once you have collected data for the checkout, you need to send this data to Chec to capture the order and charge the credit card. We will preform server side validation and return a displayable error if something is wrong.

+ Request (application/json)

             {
                  "buyer": {
                    "first_name": "Devan",
                    "last_name": "Koshal",
                    "email": "devan.koshal@gmail.com",
                    "address": {
                      "street": "68 Kingsway",
                      "town_city": "Northampton",
                      "county_state": "Northamptonshire",
                      "postal_zip_code": "NN28HF",
                      "country": "UK"
                    }
                  },
                  "extra_fields": [
                    {
                      "name": "Extra Field 1",
                      "value": "Value"
                    },
                    {
                      "name": "Extra Field 2",
                      "value": "Value"
                    }
                  ],
                  "order": {
                    "quantity": 3,
                    "customer_set_price": null
                  },
                  "card": {
                    "number": "4242424242424242",
                    "exp_month": "02",
                    "exp_year": "2015",
                    "cvc": "123",
                    "name": null,
                    "address_line1": null,
                    "address_zip": null
                  },
                  "meta": {
                    "test": 123
                  }
                }

+ Response 201 (application/json)

        [{
           "success":true,
           "order":{
              "id":"ord_34actmgLYDS4",
              "merchant_id":"mer_51sQ1GuaJKWl13",
              "buyer":{
                 "first_name":"Devan",
                 "last_name":"Koshal",
                 "email":"devan.koshal@gmail.com",
                 "address":{
                    "street":"68 Kingsway",
                    "town_city":"Northampton",
                    "county_state":"Northamptonshire",
                    "postal_zip_code":"NN28HF",
                    "country":"UK"
                 },
                 "extra_fields":[{
                    "name":"Extra Field 1",
                    "value":"Value"
                 },
                 {
                    "name":"Extra Field 2",
                    "value":"Value"
                 }]
              },
              "product":{
                 "name":"Dummy Product Name",
                 "price":"$321.56"
              },
              "order":{
                 "status":"1",
                 "currency":"USD",
                 "quantity":"3",
                 "shipping_amount":"$0.00",
                 "total":"$964.68",
                 "total_charged_in_usd":"$964.68",
                 "card_last4":"4242"
              },
              "conditional":{
                 "collect_shipping_address":"1",
                 "digital_goods":"1",
                 "shippable":null,
                 "pay_what_you_want":"0"
              },
              "created":"1405404980",
              "meta":{
                 "test":"123"
              }
           }
        }]
        
## Check discount code, quantity, & pay what you want price [/checkout/{product_id}/check]

### Validate discount code, quantity, or pay what you want price [GET]  
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}

## Retrieve shipping options available for selected country [/checkout/{product_id}/shipping_options]

### Retrieve available shipping options [GET]  
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}

# Group Orders
The API allows you to add, delete, refund, and update orders. 

## Orders [/orders/{merchant_id}]

### List orders [GET] 

+ Response 200 (application/json)

                   [ {
                   "id":"ord_31yIfnztwxCg",
                   "merchant_id":"mer_51sQ1GuaJKWl13",
                   "buyer":{
                      "first_name":"Devan",
                      "last_name":"Koshal",
                      "email":"devan.koshal@gmail.com",
                      "address":{
                         "street":"68 Kingsway",
                         "town_city":"Northampton",
                         "county_state":"Northamptonshire",
                         "postal_zip_code":"NN28HF",
                         "country":"UK"
                      },
                      "extra_fields":[{
                         "name":"Extra Field 1",
                         "value":"Value"
                      },
                      {
                         "name":"Extra Field 2",
                         "value":"Value"
                      }]
                   },
                   "product":{
                      "name":"Dummy Product Name",
                      "price":"$321.56"
                   },
                   "order":{
                      "status":"1",
                      "currency":"USD",
                      "quantity":"3",
                      "shipping_amount":"$0.00",
                      "total":"$964.68",
                      "total_charged_in_usd":"964.68",
                      "card_last4":"4242"
                   },
                   "conditional":{
                      "collect_shipping_address":"1",
                      "digital_goods":"1",
                      "shippable":null,
                      "pay_what_you_want":"0"
                   },
                   "created":"1405404739",
                   "meta":{
                      "test":"123"
                   }
                },
                {
                   "id":"ord_31yIfnztwxCg",
                   "merchant_id":"mer_51sQ1GuaJKWl13",
                   "buyer":{
                      "first_name":"Devan",
                      "last_name":"Koshal",
                      "email":"devan.koshal@gmail.com",
                      "address":{
                         "street":"68 Kingsway",
                         "town_city":"Northampton",
                         "county_state":"Northamptonshire",
                         "postal_zip_code":"NN28HF",
                         "country":"UK"
                      },
                      "extra_fields":[{
                         "name":"Extra Field 1",
                         "value":"Value"
                      },
                      {
                         "name":"Extra Field 2",
                         "value":"Value"
                      }]
                   },
                   "product":{
                      "name":"Dummy Product Name",
                      "price":"$321.56"
                   },
                   "order":{
                      "status":"1",
                      "currency":"USD",
                      "quantity":"3",
                      "shipping_amount":"$0.00",
                      "total":"$964.68",
                      "total_charged_in_usd":"964.68",
                      "card_last4":"4242"
                   },
                   "conditional":{
                      "collect_shipping_address":"1",
                      "digital_goods":"1",
                      "shippable":null,
                      "pay_what_you_want":"0"
                   },
                   "created":"1405404739",
                   "meta":{
                      "test":"123"
                   }
                },{},{}...]

## Order Resources [/orders/{merchant_id}/{id}]

### Retrieve an order [GET] 

+ Response 200 (application/json)

        {
                   "id":"ord_31yIfnztwxCg",
                   "merchant_id":"mer_51sQ1GuaJKWl13",
                   "buyer":{
                      "first_name":"Devan",
                      "last_name":"Koshal",
                      "email":"devan.koshal@gmail.com",
                      "address":{
                         "street":"68 Kingsway",
                         "town_city":"Northampton",
                         "county_state":"Northamptonshire",
                         "postal_zip_code":"NN28HF",
                         "country":"UK"
                      },
                      "extra_fields":[{
                         "name":"Extra Field 1",
                         "value":"Value"
                      },
                      {
                         "name":"Extra Field 2",
                         "value":"Value"
                      }]
                   },
                   "product":{
                      "name":"Dummy Product Name",
                      "price":"$321.56"
                   },
                   "order":{
                      "status":"1",
                      "currency":"USD",
                      "quantity":"3",
                      "shipping_amount":"$0.00",
                      "total":"$964.68",
                      "total_charged_in_usd":"964.68",
                      "card_last4":"4242"
                   },
                   "conditional":{
                      "collect_shipping_address":"1",
                      "digital_goods":"1",
                      "shippable":null,
                      "pay_what_you_want":"0"
                   },
                   "created":"1405404739",
                   "meta":{
                      "test":"123"
                   }
                }

### Refund an order [POST]
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}

### Remove an order [DELETE]
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}

### Update an order [PUT]
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}

# Group Payouts
This API allows you retrieve information about payouts, and update a merchants payout data.

## Payouts [/payouts/{merchant_id}]

### Retrieve payout data for a merchant [GET] 
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}

### Set/update payout settings [PUT]
Set & Update a merchants paypal settings.
+ Request (application/json)

        {}

+ Response 201 (application/json)

        {}

